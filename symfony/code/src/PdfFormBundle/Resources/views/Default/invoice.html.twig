{% extends 'base.html.twig' %}

{% block body %}
    {{ form_start(invoice, { 'style': 'horizontal' }) }}
    {{ form(invoice) }}
{% endblock %}

{% block javascripts %}
<script>

    /**
     * Checks the hourly price input value and cleans up bad input
     * @param parentDivElement
     * @returns {Number}
     */
    function checkHourlyPrice(parentDivElement) {
        var hourlyPrice = parentDivElement.find("input[id$='_hourlyPrice']").val().replace(/[^\d.-]/g, '');

        if(isNaN(hourlyPrice)) {
            hourlyPrice = 0;
        }

        parentDivElement.find("input[id$='_hourlyPrice']").val(hourlyPrice);

        return hourlyPrice;
    }

    /**
     * Checks the number of hours and cleans up bad input
     * @param parentDivElement
     * @returns {Number}
     */
    function checkHours(parentDivElement) {
        var hours = parentDivElement.find("input[id$='_hours']").val().replace(/[^\d.-]/g, '');

        if(isNaN(hours)) {
            hours = 0;
        }

        parentDivElement.find("input[id$='_hours']").val(hours);

        return hours;
    }

    /**
     * Set the developer's total to the hours * rate
     * @param parentDivElement
     */
    function updateDeveloperTotals(parentDivElement) {
        var hourlyPrice = checkHourlyPrice(parentDivElement);
        var hours = checkHours(parentDivElement);

        var total = hourlyPrice * hours;

        parentDivElement.find("input[id$='_total']").val(total.toFixed(2));
    }

    /**
     * When a total or the tax rate is updated, update the invoice total input value
     */
    function updateInvoiceTotal() {
        var developerTotal = 0;

        $.each($("input[id^='developer_invoice_developers'][id$='_total']"), function() {
            developerTotal += parseFloat($(this).val());
        });

        var taxRate = parseFloat($("#developer_invoice_taxRate").val());

        if(isNaN(taxRate)) {
            taxRate = 0;
        }

        var invoiceTotal = developerTotal * (1 + (taxRate / 100));

        $("#developer_invoice_total").val(invoiceTotal.toFixed(2));
    }

    $(document).ready(function() {
        // Add a change handler for developers' hourly price inputs
        $(document).on("input", "input[id$='_hourlyPrice']", function(e) {
            // The way the Braincrafted Bootstrap Collection renders forms, we have to go up 4 levels to get the parent
            // div
            var inputDiv = $(e.target).parent().parent().parent().parent();

            updateDeveloperTotals(inputDiv);
            updateInvoiceTotal();
        });

        // Add a change handler for developers' hour inputs
        $(document).on("input", "input[id$='_hours']", function(e) {
            // The way the Braincrafted Bootstrap Collection renders forms, we have to go up 4 levels to get the parent
            // div

            var inputDiv = $(e.target).parent().parent().parent().parent();

            updateDeveloperTotals(inputDiv);
            updateInvoiceTotal();
        });

        // Add a change handler for the tax rate input
        $(document).on("input", "#developer_invoice_taxRate", function() {
            updateInvoiceTotal();
        });
    });
</script>
{% endblock %}